<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAASdEAAEnRAQX8q5UAAAAGYktHRAAAAAAAAPlDu38AAAAJdnBBZwAAAEAAAABAAOrz
        +GAAAAAldEVYdGNyZWF0ZS1kYXRlADIwMDktMTItMDlUMDc6MzY6MTQtMDc6MDB6FjBAAAAAJXRFWHRk
        YXRlOmNyZWF0ZQAyMDEwLTAyLTIxVDE4OjM3OjE1LTA3OjAwHbfjlgAAACV0RVh0ZGF0ZTptb2RpZnkA
        MjAxMC0wMS0xMVQwOToxNjoxMi0wNzowMK62UoUAAAA0dEVYdExpY2Vuc2UAaHR0cDovL2NyZWF0aXZl
        Y29tbW9ucy5vcmcvbGljZW5zZXMvR1BMLzIuMC9sagaoAAAAJXRFWHRtb2RpZnktZGF0ZQAyMDA5LTEy
        LTA5VDA3OjM2OjE0LTA3OjAwJadGdAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoA
        AAATdEVYdFNvdXJjZQBHTk9NRS1Db2xvcnOqmUTiAAAAMXRFWHRTb3VyY2VfVVJMAGh0dHA6Ly9jb2Rl
        Lmdvb2dsZS5jb20vcC9nbm9tZS1jb2xvcnMvUB216wAAGmhJREFUeF7tWwd0VWXWvaAgICCoCA4wIKgg
        KCp2GRFE8Xd0FB110LHQVFAE/EEFpNcEQieUEEJ6IIH0hPRCeu8hnfRKeq/73+fmBRIMmeCw1jBr/Y91
        1n333e/efGd/p+xzvoui3KEfAIpIfkH+2ITE+CVx8bEW0TFRsT6XvAusbc+X6506XrJ3n1b6bu0d3ru0
        tu+j/J3fx2nt2Xk35Q7VqpfT0t67S3l5xvQ+evrHn7pgY6XvH+iXX1hU2FJbW4vikmKkZ6QhJjYKPpe8
        YGtvDUPj0y2Hjuwvo+LBBGIPZS6/D9fZr63814HBVVSoQB8e36ZSYY7O9q25eTloa2ujQbR/Wtta0dLS
        gsamRtTUVhOUIlxOSoCbhwvOGJ1u239wbynvd6B8SgCGyjMF1Dv+IxM1Nj0jqzaX5p181soMqRnJqG+o
        v6Z8d18EnOaWZtTW1aCgMB9hEaE4a2kOAlHBZxpTnubz+tzR1vDrujXqKnGSj3GyQWZnjZGQFIuyilI0
        caVFSZHW1vbVF5HvnS1DBaK5CdU1VcgryEFgiD9OGZwEnxkhFrVHZ/edC4Iov1t7ez/tvbv36BucbI2K
        DcfVsmJ19RubGlBXX6sqVlFVjtLyq7xWgvKKMtUFGhsb0NLacs04mpubUVVdiaKSAiQmxcP8rCn4/CSC
        MGfLto13Zlzg6sjEnj14eF+6p7cbiq4WUvk61ayLSwuRlXcF6VkpSL2ShOT0RKRkXOZ5KrLzMlFIRQWY
        BgLRYRUSHyoqy1FYXIDktMswszAWSwjS0t4xSVzhjnIHUV4+PP4iET0lPUlVXFa9oDgPiSlxiIwLRXhM
        MCJiQxARE4Lw6GBE0krkWnpmKnLyswhUkWoRLYwHAoQAIi5UUJSHuIQYnDh1rI1WcJTKD7yjANiro0Xz
        3zGEQcve6aI9SkqL1cmLqSelxSM0KgD+oT7wC/aGm7czTMwNcVzvaBul1dDkNOydbBAeFYIr2emq2VfX
        VKtBUUCoq69Tn5fLmODl6wGmxgJxhTvKCvbu05YA+NhR3UPJwaGB6irKxGVVI+NCcCnYE56XXODsbg/d
        E4dlFUOYKjdRfqGcoDKRR3QPNjg420Gsp6ikELW1NQRAgmV7PCgszlczyhkjffCek7znnjvGCnT27yEA
        u2eT+JQmMGhJ4JOAJ/4eFOEHd19nuHg5wsjMQPw4ngA8t3P3NmXr9k3iy/14Pp5K/UoXyrY8b6EqKkGy
        IyY08HliBTn52XD3dAHHpfKeqXcEADIJmr74/6dcnbqMzDQ1qldUlqn+7RfshYse9nB0tcHR4wfBie+h
        tdzVefLynb/dzWsfCwiOF+2QS2WrCKKkS8kKkjGyc7MQFRMBWksjAVssvOM//hHzP3BIR2EcWGxiZtgo
        k5QILv4fnxQNb383OLnZwsbBUohNHSc9vzv/1YBwFxVbc/jogYbI6HANh2hSU2RVdRWycjKRmJwAki1x
        AwPeM+A/DoDwdVJeheTnBzMLk2YhMAKAcIDYxEjV9x24+pY25ti7X0so7us3M135ndfHUAJs7C+oKbCh
        sV4FoIYxISc3G5eTE2HnYC2WFEIZe0cAwBVTCMSP5udMm/MLclUASghATGIEPC5dhL2LNSysTMR38zjp
        6T0BQFfoIwHy1OkTbeJOEkwFAEmrUlNIjPEgz9izTyuf42bewQAUXQfgojXMzhkJm8smAE/1BIBco2Kz
        6FYlEVFhVLxWjQNyzM3PQVxiLFhdgtdrOG7hHQxAJwsgAKZnDQWATAIwpaforQHgYVpLqJePh4YYtaik
        SgCIiYtmjRCAo8cONzOTbP+PA7Bf11g5uH8jXWDPDzd1gYsXYHJrAAwiWFYOTraorKpQLUAAyMnLRmR0
        BIJCAqGnfwI7dm017zUAm79VlC1LlT4bFiv9flukDKTc99tCZeT6hcp4ylTKc+sXKDMob65boLzL44eU
        v1M+pcynfK4ROf+I8gFFxs1d95UyQ2v7Mh2LsyYt3caA6wBc2aW9+wmtPTev7aWoYsHTl0dt4QSl5AOd
        AQiLDFVdwMBQXwDw+R0AG5coyqZvqOgiZRiVepTyMif5PpX6lrKV5yeovBWBcN30Td/grUv7J277fkDm
        juWD8rVWDS3eu3p4+b5fHqze/+vI2v1rR9YeWDuqjlJ/YO3DGhlVt//Xh2r3/TKiRufnB6o5vkJr5eAS
        rQ1zKs1ZAucXdhMECYC4gJb25pLflj+7cs0/ldk/f6k888tXyrhfv1YGHlp2XY0jxw4qLKiEF6w0NTdu
        kUwgbLDDAkLCgtlJ8oaRyRkBIKELABrlZYU/2LC4j/PWZf1Td60YXCgKHdsyvslQ52lYnngNzmbvwvP8
        Jwi8uAgxfquQGLoOyZGbcCVhF/JSdVB05RBKsnRxNfsYruYcp5xAac5JVeRcrhVlHkZhxkF1fGbCTrg6
        7IDFORPc3AKMoKW1rm3n6sfrt/0wpGzTdwNyNiy5K37tAuXUr18pTyl9+E9pF0dnW2GIXxkaGzTk0e+l
        LqhjZSkcI4j+7+7pBhMzIwEg5xoAojxXVaHy7+1Yfm+OrcGbiPFfhfTYbapClYUGaKi0QEutNdoa7IBG
        B6DJkeJ0g/C3xl5Kx73NzogKNyYApjcHwMIQhw7vgr/nDkT6b0Cw52p42y3EiZ1PYv2ivh4/fKJMpDJ3
        Ue4WpXbu3j7vtIFeTWZ2BgFoUktrAcA/6BKcXZw6LKCkCwBUfjBBOG9z+k00Vlp2Uayl3h6lBRbISNJH
        aoIeMlNOozjXFLXl59FaZw80EBBVqHyPQsAaukprnQNCAs90BYCl7TUewCxgQgAOHtoNP+/DSEs8g/xM
        c1zNt0RKzH7orB3XtPIfygoqI8xuEOWeTZt/e4+1RWVaRiqa2CVqByATl/x9SIRspXeI7Tu3VHYBgP49
        duvSfnFRviup/MX2iTY6obbMGl6uu2GgtwrGp1fD+twGeLrsQkTQYQJigPIiK1qGKO58g8gzehIXNFU7
        4mqeJdxcdGmWhmxwZKnkRZoc0QnhJEIuKhGSLLD/wE44WO9GeOBRpF82QkHWWRRmmcNw/wysnK+cGjtS
        GU6F7qMMXb1m1Qcn9HQrUtKS2FITAOpVALwveeK8jRX0z+hh247NDTcCMHHbsgFpCcHrCYBb++SbXJEc
        xxJy+wLs0/6GIPwvAdhIALQ4kSPqapTkWlIRWVXXHkSe11Va611RUWyLNCrjYHcAJ/SOIiwyRA2EGez2
        RMQGw8vfVQXgtJEeAdgBBxsthAXoEnhTWuAFlOSdh/mxOVj1mWL+xCPKg1RIQLh/+Y/LPjx24mh5Ukqi
        2lOUijAr54rKAi0szdQ0uG375rabALCRinu1T7jRHRVFNrC12orjR1bgjN4aXDi7GZ4X9xAAXQJgjLIC
        a1oAledYVRo82qWxk3Q59+Q1T7TWu9N67JDKZ/h6HoGenjYndgwXbK1g72wDa3srmFuasJOjy0aGFgzP
        aNEFjiAp1ojK26C61BlVVx1hpfc2Vn+hmD07SVV+qFgBAfib7vHDpQmX49SyuAMAN5bDxgyAtA5s3bYJ
        vwfg+4FpCSG7gZbgTgp4or7KBVlpZxETro/oMH1c5iRyMyxRWeKI5lpRlIB1K978/ebSUOWGgmxrJMYY
        EQRdnLPQwalTe3BUVxuHj2jhyFEt9dzm/EGEBpziyp9FWZEjGqs90FTrg4Zqf9gYvA+mQ5N3XlUGa+LA
        gNU///Tm0WOHSmLjo1XlOwBwcXfGGePTOHZSF1u6BYAuEBe8l7sPl2kFAZz8JYovv4vwe5Mf2hopDX78
        3Z8iRxFeV8Wn0/eO3248yjPbpa3hEppqvOgKzsi9Yo2UeHMCbIjQwNMICTiNiJAzBNsMOekXUFbojIYq
        b97jzzkEUiLQXB8P69PvghzF+NuPlIGaTNCXQfAvrPuLomMj1AAoViAucNHNUQVAdYEdm39vAQyCaVGX
        fqUFpFOyNZLF4xVKGtCcQkmmEKDmBEosQYmkhFGhEIpYThAlUCMConzvOHb8LmM6RO4JQUt9MBprglBX
        GYjaimDUVoaivjoKTXXxaG3i35U5tHJOrbn8nou2lhzUV7rh3NGnQFZqvG6hcg+3E5WrFQVMg9teZJWZ
        LwWRkCABQIKgi4czCysT9hWNpCfQPQDhXt+goewg6op+RUPpATRVMf/XeaG1MQZtzQJEASdRQimjVFDK
        NSLnpRq5qhkj4zqkuNN3uS4i49vvaxNpuYrWZtLXxgI01mWirjoJ1RWRKC/2YdqzRlHWKRKoXShMW42i
        tAUoTvkHzA+NAVO4MVP4PcJn2FuQvsBz7DPkhUYQSJbC0mXKYYbx8nVXm6gWVqbSXvt9EBQLCPdcgtrC
        H1GeMg5VGVNRkz0L9QXz0Xj1J7RUaqGtRg9tdeZorbVES815ZoDz5A3n0FBhgbrys0yblpQLqCm1ZqCy
        ZqCyQVUJCxNKedF5Bk0Lpj4TFOcYoDDzBPLS9yMreQcy4tchJWoFmeVCRPvPQ5jnLAQ4PwNv2wnwujAS
        vjZDEOhwDyJc+iLOS0FKwEBciZwJY52uALRvsuyYTkqcFxwWiOraKhUAabYEhwfAydUetI5WWoD774Lg
        dQBWoDx1AgF4CrXZrxOAj9FYsgwt5b+htWoPQTiIlqp9aCrfhYarGwjYSlTlLkJ55j9Qkj4PRSnvIf/y
        /yA34U1kxc7GlaiZSIuYgZTQF3E5aDri/achxvcJRHo9hjC3cQhxGY1Ap4fgZ/cAfKyHwtNqENzO3gMX
        87vgZNIHziYK3M8q8LmgwN9WQYCdgmDHQUgInAXjfd0DwJo/LzDEj73BSrXJIp3hsMggyLYbwWkmUOd6
        CYBYwCe0gB/QUrERrdV7CcBhAnEAzeXaBGATaot+QlXeEgIwH8Vp81CQ9FfkxM9FZsxsKv4akkNf4WRf
        QKzfdER5T0O4xxQEuzyOAKeJ8LUbBy/r0XC3GgkXiwfhZDocdkZDYG0wEFan+uHs8b4UBef1FNieUXDR
        VIG3lYII10HIip4FswM3B8A/2JclcbkKgNBiW7bDTOn/xiRddJWW2wNAaWcAPkNJ2ocoTH4XeYlzufpv
        IIOrnxr+KpJCXkJi4HOI83sa0T5TEeExGaFujyLIeTz8HcfA13YUTX0EPKyGw/XsEBZdA+Fg3J9K94W9
        oQJXcwW+1gpCnBREuytI9B1Ei5oFw73dA8Amap5fkI/aYZYgeJmkyMffEyGRgXD1dBIAbhIE1RjQ2QVu
        xQIIQHo7APmJbyMnbg6t4HWkR9L8w15GUvDzSAh4BrGXnqQlTKYlPIpQ1/EEYQz8HUYRhBEEYTjcLYfQ
        GgbSGvrDwagvpX3l3SwUeFoq8KIF+NsN4vNmwfQGC2jvCu14in3GbC9fN3WPQFKhbLPFJ8cgKj4Mji52
        0mPsKQj2DoAmukA9XaCmYBUqshfjavp8FCTPo++/Q8XfouKzaf6vITHoFZr/C4jyeZZKP4UQ1ykMcI/j
        kv0EeNuMg8f50XA9NxLO5g9y1YfBxnAwzusPhOXJfrA41pei4MIpBY7GCjzOKQi0V5DgMwjZMbNgsr+r
        BWi6ww/Qx52MTAwgXEDaYcnplxEYdol7DLY4fvJoG8cF3h4XkBhQ+BMqc5egjDHgugu8jWyxgGhagATA
        ThYQRwuI9n4CEZ4SBB9B8MWxCHB8GJfsRsDH5n72G4bC7dwgBsH+DIJ94czVl5X3YwAUF4hwURDlPogu
        NQtGN2SBjs0WHl/ad2CPnb6BXgm7Q03M/a3cWmuk6Rdqae805/Xnbw8APcSA7Lg32jNA+Awkd44B3lNp
        CZNpCY8ikDHAz34MFR9FSxhB/x9OSxhCSxhI/++PC/p9cZ6rb2ugXHMFD2aEQIdBBHYWzA92tQBRSkCQ
        rTOa+f37Duydxaj/LV3if/n7QqbIV3kcamiif70hJASC5fDE7tPgv4gBNwDQbRYIeZVZ4EX6/nREXssC
        k5j6JtINxtENRlP5kXSDB6n8MDiYDIGt4UDS3H4sdggAM4AEQkmFkgYjXRUk+Q0iuEyDN1hAlzZXb09+
        DwCJUOojGh5wawBIECxKYRC8zCAYPwdZDIIZUTNoBS/TCp6n2T5DHvCkygOiyAPC3R8hDxiLIKeHGQhH
        MBDez0A4lIFwEFwt+tP8213Anb7fwQMkBgQ7dc8Deqtzl3FdAVhMn15+2wFIVWPAc1S+PQ2KCwS7TCQX
        GEcuMBqeZHtuqgUMh73xENic0fCAE7fGA24DAIs0AHQwwdtjAam0AAEgIeBpusJUssDJCHN/lCCMZwAc
        wwA4Ct7WXXmA4x/gAbcJgB/+LQso7OQCHTyg3QKu8wA1C3g81okHPNyFB7iSBzj/AR5wGwBYiNqC7/8w
        ABIE8zVU+Ep0OxVOYhCMD3gRMQyCEV7TyACnsK0+CX4OE+FjO47mP5rmr+EBJsMYAAfjwuk/xgP+MACs
        qTVZYMG/BcDNmGBnC7gZD/C7DTzgDwNwPQ1+TQCW9d4CrhGhxSi7wmIotb0Yyk3oVAuEzaD5v0T/f47+
        /zRp8FT6vwTBRxkExzMVjmEqJA+w0vAAs3+PB9wyCOZ8wZptJY0FCABLewWAUGGpBmvIBCtySIUz5qMw
        ZR4LoXdYCL3F9DcbqWGv4XLwK+0u4Pssg980Ki/V4CS1GuzCA84yC5hd5wEXboEH/PyVMkA6Qrf6ke2k
        vpQ+P32uPE4ilB7u8VWvAfh9OdxeDPXEAy7fZh5gwn4Ardfks7fVTRHRRdWnt0DI4H6U/oveV57csrRf
        RrjHlwTgu15ZgArAjVT4GgBzWQu0U+FUUmFxgXi6QIzvNNYAUxDiRiboPJE0+DoTdKEFOJmRB9xKP4BU
        eO3XivmLU9W2+D0afXoNQn/ecC/lvg9eV17c/F2/TBWA/G9vCwA58QQgur0blBx6Qz/AU9MPuKjpB5AH
        eN3AA3rTDzBiP2DNF4rVuIcVeedHQBB9RK9egSCDZUdl7Mxnlbc2ftMvO9zjC1rA7QCgeyqsuoBfOxWW
        llgHFQ4kFVazgPVwBsMhLIrIA8w0/QDWATfrB0hHaOVniv0D9ynTqMefNfqIXmLZAkKPn/s1Nz05fbLy
        6YYld+e1A/BN7y2gS0vsJjGADRFhgtdqAQIQzYaIMMEgWoBUg97Wo+Bm2V4M2RsPbm+J6bEfwJZYT/0A
        U/YDuDvsNvReZTZ1eUqjj1iCbJbKjnGP8WAUB0ymvDp1grJ4/eK7C8I9/0kXYH+voxjK0VDhku+76Qlq
        MQtsJHVexaboYrUneLW3QdCHFtCpH6BagP31foB7L/sBUg0u/bvic+9AZR71mKHRZ6TGFWS7vEcAxnCA
        mM4bk8crywlAUbjH5+0ApEg1+CTb4jPZFP2IXeGl7AqvZzNUu5uu8AoCsJANEXaFyQQLk/+q9gSz2RPs
        bT9A5QG97AdIWaz2A8JnweLQWHzzoeI/aIDyOfWYo9FnNI9DNG7QIwASOJ6hvDVpnLJi3SIB4DMNAONQ
        mTGFAMxAff77aCxehJayNQRgO9rYGZY9gqayragv+YUtse/ZEfqaAHzafVf4D/YDbuQBblTcz6a9I5QS
        cC8KEgSAMVgyTwXgC+oxV6OPLGyvABCkxG9mM4ouXvNln3Sv8++grngdqjJnourKC6oF1OW/i8aiz9Fc
        uoybQWsJwma6wwY0lv6M+uLlqMlfjMqcz8kEP6YFfEAe8Ff2A+ayH/AG+wEzkdElBjzdHgR9JjMIPsog
        OJ79gDFsjoyCP13A13Y4+wFD4GE5gP2Afmo/wMVMGqF9uOp3IdKtPzvCA5EZMQE5sW9Cf+cILHhPudjv
        buUT0UOjz594lM1SCYQ9WsBDHPAY5SUi+O6SDxTbwxtGtsUFLGaffwtXdzOV3Mz+/1au+HYqvpvmrwPU
        7OP3XdwY2YiGktWMAd+3b4xkfUE2+CmKUj8kHX6PdPhtMsI5dIPXNRsjL3FjpKMinMZAOIWcQILhY2yP
        TWRAnEB2+Ajb5EKPH4Evm6a+do/Cz1HGSBn9AvnEq2yFSZ9xDlxMp4DcpfLtVxT5z4Ky+i9p9BnBoxCj
        fxkDhnGQWMETlBe4xz5/xXzFY/eqoXWmB6axITmb0ZnbVB4LkBC0ElfiNqEgbQ9fgDqCinxdVBUeQ3Xx
        UcpBVBfp8FwLlfk7UJ63GaXZ61GS+TOKMn5CQepy5CUvRU7iEmTGL0BGzBdIi/ocKRHzcTn0UyQEf4y4
        wI/40tU8RPq8j1CPdxHo8jYuOc6Bp/VMtspeZUp8nm2xabhwchIsDo/Hia0PYMt3d5cvfF/RHzZEVf4F
        jR6ij7wpIqRIskCPH9lSFhDEZORFoymPj1Nm/vMd5ecV/1AsSTB81y7oE8X0mL5l2YCCXSuHVOiseaD2
        wLqHG/nmWIv+7slthjrTYHpwOs4dewkX9GbAzuB1Ni/fYAubYiIym/19kVn8/S9sbr4Ma/0XcP7kc7A8
        /gzMj0yF8f5JOK09ASd3/Bm6W/6EQ7+NaNP5eViz1k+DG3b+OLCWb6yVbfr2rjy+EJX8y9dK6Op/Kh7L
        P1HO/P0NZemDw5QXZd6a+Yseoo/o9S9XX5ARH5F8KQHjAYqkxT/16aOM4YMnEownSDGffesl5VX+sblf
        /lX5ePH7yoLvPlR+/OFjZT1B2v3TZ4ouJ3SGYJ3lu3u2fFnBhdTUi6+wETzFj0VWILl68PpFSgiPQTwP
        kN811z051pn32az5UjHncwxYkxzhOz+7mNvXfveR8sPiD5Sv+Hc/mjdLmTP7eeVl8pWnJ4xWJg0epIzn
        XCXYyYrLvGX+oofoI8r3ignKIBks1FFuFAYlD5FXTTqL/CYigaVD1HFD7lWGjRul3D+F7+g894Ty0Iyn
        lVGvT1dGz3lBGTv3ZeXPfHNj/Lt/UR7522vKBDnyfBwB/fMbvD6T416Zpoyk6z3ELPTgmIeU+xmLZAXl
        b9/4N7ubV8c4mbfMX/TotfIcq346KsKO9+zkAWqB1EuRsTcTedbNpKf7buVvdzxf5t+rVe9QvLvjtTcu
        NcD8N533pNf/X+sOgf8DcSEdjMKIajIAAAAASUVORK5CYII=
</value>
  </data>
</root>